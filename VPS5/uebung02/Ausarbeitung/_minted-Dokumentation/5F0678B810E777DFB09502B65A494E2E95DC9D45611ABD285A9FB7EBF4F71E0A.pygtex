\begin{Verbatim}[commandchars=\\\{\}]
\PYG{k}{using} \PYG{n+nn}{System}\PYG{p}{;}
\PYG{k}{using} \PYG{n+nn}{System.Threading}\PYG{p}{;}
\PYG{k}{using} \PYG{n+nn}{System.Threading.Tasks}\PYG{p}{;}

\PYG{k}{namespace} \PYG{n+nn}{SimpleRaceCondition}
\PYG{p}{\PYGZob{}}
    \PYG{k}{class} \PYG{n+nc}{SimpleRaceCondition}
    \PYG{p}{\PYGZob{}}
        \PYG{c+c1}{/// \PYGZlt{}summary\PYGZgt{}}
        \PYG{c+c1}{/// Number of increment runs}
        \PYG{c+c1}{/// \PYGZlt{}/summary\PYGZgt{}}
        \PYG{k}{private} \PYG{k}{const} \PYG{k+kt}{int} \PYG{n}{NumberOfIncrements} \PYG{p}{=} \PYG{l+m}{1000}\PYG{p}{;}

        \PYG{c+c1}{/// \PYGZlt{}summary\PYGZgt{}}
        \PYG{c+c1}{/// Number of threads}
        \PYG{c+c1}{/// \PYGZlt{}/summary\PYGZgt{}}
        \PYG{k}{private} \PYG{k}{const} \PYG{k+kt}{int} \PYG{n}{ThreadCount} \PYG{p}{=} \PYG{l+m}{5}\PYG{p}{;}

        \PYG{k}{private} \PYG{k}{static} \PYG{k}{readonly} \PYG{n}{Random} \PYG{n}{Random} \PYG{p}{=} \PYG{k}{new} \PYG{n}{Random}\PYG{p}{();}

        \PYG{k}{private} \PYG{k}{static} \PYG{k+kt}{int} \PYG{n}{\PYGZus{}counter}\PYG{p}{;}
        \PYG{k}{private} \PYG{k}{static} \PYG{k+kt}{bool} \PYG{n}{\PYGZus{}useLock}\PYG{p}{;}

        \PYG{k}{private} \PYG{k}{static} \PYG{k}{readonly} \PYG{k+kt}{object} \PYG{n}{LockObject}\PYG{p}{=}\PYG{k}{new} \PYG{k+kt}{object}\PYG{p}{();}

        \PYG{c+c1}{/// \PYGZlt{}summary\PYGZgt{}}
        \PYG{c+c1}{/// Main method}
        \PYG{c+c1}{/// \PYGZlt{}/summary\PYGZgt{}}
        \PYG{k}{public} \PYG{k}{static} \PYG{k}{void} \PYG{n+nf}{Run}\PYG{p}{(}\PYG{k+kt}{bool} \PYG{n}{useLock}\PYG{p}{)}
        \PYG{p}{\PYGZob{}}
            \PYG{n}{\PYGZus{}useLock} \PYG{p}{=} \PYG{n}{useLock}\PYG{p}{;}
            \PYG{n}{\PYGZus{}counter} \PYG{p}{=} \PYG{l+m}{0}\PYG{p}{;}
            \PYG{n}{Console}\PYG{p}{.}\PYG{n}{WriteLine}\PYG{p}{(}\PYG{err}{\PYGZdl{}}\PYG{l+s}{\PYGZdq{}Using \PYGZob{}ThreadCount\PYGZcb{} threads \PYGZdq{}} \PYG{p}{+}
                              \PYG{err}{\PYGZdl{}}\PYG{l+s}{\PYGZdq{}and \PYGZob{}NumberOfIncrements\PYGZcb{} increments\PYGZdq{}}\PYG{p}{);}
            \PYG{n}{Console}\PYG{p}{.}\PYG{n}{WriteLine}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZdq{}}\PYG{p}{);}
            \PYG{k+kt}{var} \PYG{n}{tasks} \PYG{p}{=} \PYG{k}{new} \PYG{n}{Task}\PYG{p}{[}\PYG{n}{ThreadCount}\PYG{p}{];}
            \PYG{k}{for} \PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{i} \PYG{p}{=} \PYG{l+m}{0}\PYG{p}{;} \PYG{n}{i} \PYG{p}{\PYGZlt{}} \PYG{n}{ThreadCount}\PYG{p}{;} \PYG{n}{i}\PYG{p}{++)}
            \PYG{p}{\PYGZob{}}
                \PYG{n}{tasks}\PYG{p}{[}\PYG{n}{i}\PYG{p}{]=}\PYG{k}{new} \PYG{n}{Task}\PYG{p}{(}\PYG{n}{ThreadMethod}\PYG{p}{);}
                \PYG{n}{tasks}\PYG{p}{[}\PYG{n}{i}\PYG{p}{].}\PYG{n}{Start}\PYG{p}{();}
            \PYG{p}{\PYGZcb{}}
            \PYG{n}{Task}\PYG{p}{.}\PYG{n}{WaitAll}\PYG{p}{(}\PYG{n}{tasks}\PYG{p}{);}
            \PYG{n}{Console}\PYG{p}{.}\PYG{n}{WriteLine}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZdq{}}\PYG{p}{);}
            \PYG{n}{Console}\PYG{p}{.}\PYG{n}{WriteLine}\PYG{p}{(}\PYG{err}{\PYGZdl{}}\PYG{l+s}{\PYGZdq{}Program finished, counter = \PYGZob{}\PYGZus{}counter\PYGZcb{}, \PYGZdq{}} \PYG{p}{+}
                              \PYG{err}{\PYGZdl{}}\PYG{l+s}{\PYGZdq{}race conditions occured = \PYGZdq{}} \PYG{p}{+}
                              \PYG{err}{\PYGZdl{}}\PYG{l+s}{\PYGZdq{}\PYGZob{}\PYGZus{}counter!=(ThreadCount*NumberOfIncrements)\PYGZcb{}\PYGZdq{}}\PYG{p}{);}
            
        \PYG{p}{\PYGZcb{}}

        \PYG{c+c1}{/// \PYGZlt{}summary\PYGZgt{}}
        \PYG{c+c1}{/// Method which runs parallel}
        \PYG{c+c1}{/// \PYGZlt{}/summary\PYGZgt{}}
        \PYG{k}{public} \PYG{k}{static} \PYG{k}{void} \PYG{n+nf}{ThreadMethod}\PYG{p}{()}
        \PYG{p}{\PYGZob{}}
            \PYG{k}{for} \PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{i} \PYG{p}{=} \PYG{l+m}{0}\PYG{p}{;} \PYG{n}{i} \PYG{p}{\PYGZlt{}} \PYG{n}{NumberOfIncrements}\PYG{p}{;} \PYG{n}{i}\PYG{p}{++)}
            \PYG{p}{\PYGZob{}}
                \PYG{n}{Thread}\PYG{p}{.}\PYG{n}{Sleep}\PYG{p}{(}\PYG{n}{Random}\PYG{p}{.}\PYG{n}{Next}\PYG{p}{(}\PYG{l+m}{5}\PYG{p}{));}
                \PYG{k+kt}{int} \PYG{n}{oldCounter}\PYG{p}{;}
                \PYG{k+kt}{int} \PYG{n}{newCounter}\PYG{p}{;}
                \PYG{k}{if} \PYG{p}{(}\PYG{n}{\PYGZus{}useLock}\PYG{p}{)}
                \PYG{p}{\PYGZob{}}
                    \PYG{c+c1}{//Fixed version using lock}
                    \PYG{k}{lock} \PYG{p}{(}\PYG{n}{LockObject}\PYG{p}{)}
                    \PYG{p}{\PYGZob{}}
                        \PYG{n}{oldCounter} \PYG{p}{=} \PYG{n}{\PYGZus{}counter}\PYG{p}{;}
                        \PYG{n}{newCounter} \PYG{p}{=} \PYG{p}{++}\PYG{n}{\PYGZus{}counter}\PYG{p}{;}
                    \PYG{p}{\PYGZcb{}}
                \PYG{p}{\PYGZcb{}}
                \PYG{k}{else}
                \PYG{p}{\PYGZob{}}
                    \PYG{n}{oldCounter} \PYG{p}{=} \PYG{n}{\PYGZus{}counter}\PYG{p}{;}
                    \PYG{n}{newCounter} \PYG{p}{=} \PYG{p}{++}\PYG{n}{\PYGZus{}counter}\PYG{p}{;}
                \PYG{p}{\PYGZcb{}}
                
                \PYG{k}{if} \PYG{p}{((}\PYG{n}{oldCounter} \PYG{p}{+} \PYG{l+m}{1}\PYG{p}{)} \PYG{p}{!=} \PYG{n}{newCounter}\PYG{p}{)}
                    \PYG{n}{Console}\PYG{p}{.}\PYG{n}{WriteLine}\PYG{p}{(}\PYG{err}{\PYGZdl{}}\PYG{l+s}{\PYGZdq{}Racecondition occured \PYGZdq{}} \PYG{p}{+}
                                      \PYG{err}{\PYGZdl{}}\PYG{l+s}{\PYGZdq{}[oldCounter = \PYGZob{}oldCounter\PYGZcb{},\PYGZdq{}} \PYG{p}{+}
                                      \PYG{err}{\PYGZdl{}}\PYG{l+s}{\PYGZdq{} newCounter = \PYGZob{}newCounter\PYGZcb{}]\PYGZdq{}}\PYG{p}{);}
            \PYG{p}{\PYGZcb{}}
        \PYG{p}{\PYGZcb{}}

        
    \PYG{p}{\PYGZcb{}}
\PYG{p}{\PYGZcb{}}
\end{Verbatim}
