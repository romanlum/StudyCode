\begin{Verbatim}[commandchars=\\\{\}]
\PYG{k}{using} \PYG{n+nn}{System}\PYG{p}{;}
\PYG{k}{using} \PYG{n+nn}{System.Collections.Generic}\PYG{p}{;}
\PYG{k}{using} \PYG{n+nn}{System.Threading}\PYG{p}{;}

\PYG{k}{namespace} \PYG{n+nn}{VSS.ToiletSimulation}
\PYG{p}{\PYGZob{}}
    \PYG{c+c1}{/// \PYGZlt{}summary\PYGZgt{}}
    \PYG{c+c1}{/// Queue base class with common implementations}
    \PYG{c+c1}{/// \PYGZlt{}/summary\PYGZgt{}}
    \PYG{k}{public} \PYG{k}{abstract} \PYG{k}{class} \PYG{n+nc}{Queue} \PYG{p}{:} \PYG{n}{IQueue}
    \PYG{p}{\PYGZob{}}

        \PYG{k}{protected} \PYG{n}{IList}\PYG{p}{\PYGZlt{}}\PYG{n}{IJob}\PYG{p}{\PYGZgt{}} \PYG{n}{queue}\PYG{p}{;}
        \PYG{k}{protected} \PYG{k+kt}{bool} \PYG{n}{addingComplete}\PYG{p}{;}

        \PYG{k}{private} \PYG{k+kt}{int} \PYG{n}{producersComplete}\PYG{p}{;}

        \PYG{k}{protected} \PYG{k}{readonly} \PYG{k+kt}{object} \PYG{n}{LockObject} \PYG{p}{=} \PYG{k}{new} \PYG{k+kt}{object}\PYG{p}{();}

        \PYG{c+c1}{/// \PYGZlt{}summary\PYGZgt{}}
        \PYG{c+c1}{/// Current element count}
        \PYG{c+c1}{/// \PYGZlt{}/summary\PYGZgt{}}
        \PYG{k}{public} \PYG{k+kt}{int} \PYG{n}{Count}
        \PYG{p}{\PYGZob{}}
            \PYG{k}{get}
            \PYG{p}{\PYGZob{}}
                \PYG{k}{lock}\PYG{p}{(}\PYG{n}{LockObject}\PYG{p}{)}
                \PYG{p}{\PYGZob{}} 
                    \PYG{k}{return} \PYG{n}{queue}\PYG{p}{.}\PYG{n}{Count}\PYG{p}{;}
                \PYG{p}{\PYGZcb{}}
            \PYG{p}{\PYGZcb{}}
        \PYG{p}{\PYGZcb{}}

        \PYG{k}{protected} \PYG{n+nf}{Queue}\PYG{p}{()}
        \PYG{p}{\PYGZob{}}
            \PYG{n}{queue} \PYG{p}{=} \PYG{k}{new} \PYG{n}{List}\PYG{p}{\PYGZlt{}}\PYG{n}{IJob}\PYG{p}{\PYGZgt{}();}
        \PYG{p}{\PYGZcb{}}

        \PYG{c+c1}{/// \PYGZlt{}summary\PYGZgt{}}
        \PYG{c+c1}{/// enqueue a new job}
        \PYG{c+c1}{/// \PYGZlt{}/summary\PYGZgt{}}
        \PYG{c+c1}{/// \PYGZlt{}param name=\PYGZdq{}job\PYGZdq{}\PYGZgt{}\PYGZlt{}/param\PYGZgt{}}
        \PYG{k}{public} \PYG{k}{abstract} \PYG{k}{void} \PYG{n+nf}{Enqueue}\PYG{p}{(}\PYG{n}{IJob} \PYG{n}{job}\PYG{p}{);}


        \PYG{c+c1}{/// \PYGZlt{}summary\PYGZgt{}}
        \PYG{c+c1}{/// fetch next job}
        \PYG{c+c1}{/// \PYGZlt{}/summary\PYGZgt{}}
        \PYG{c+c1}{/// \PYGZlt{}param name=\PYGZdq{}job\PYGZdq{}\PYGZgt{}\PYGZlt{}/param\PYGZgt{}}
        \PYG{c+c1}{/// \PYGZlt{}returns\PYGZgt{}\PYGZlt{}/returns\PYGZgt{}}
        \PYG{k}{public} \PYG{k}{abstract} \PYG{k+kt}{bool} \PYG{n+nf}{TryDequeue}\PYG{p}{(}\PYG{k}{out} \PYG{n}{IJob} \PYG{n}{job}\PYG{p}{);}


        \PYG{c+c1}{/// \PYGZlt{}summary\PYGZgt{}}
        \PYG{c+c1}{/// Marks the queue as completed}
        \PYG{c+c1}{/// \PYGZlt{}/summary\PYGZgt{}}
        \PYG{k}{public} \PYG{k}{virtual} \PYG{k}{void} \PYG{n+nf}{CompleteAdding}\PYG{p}{()}
        \PYG{p}{\PYGZob{}}
            \PYG{n}{Interlocked}\PYG{p}{.}\PYG{n}{Increment}\PYG{p}{(}\PYG{k}{ref} \PYG{n}{producersComplete}\PYG{p}{);}
            \PYG{k}{if} \PYG{p}{(}\PYG{n}{producersComplete} \PYG{p}{==} \PYG{n}{Parameters}\PYG{p}{.}\PYG{n}{Producers}\PYG{p}{)}
                \PYG{n}{addingComplete} \PYG{p}{=} \PYG{k}{true}\PYG{p}{;}
        \PYG{p}{\PYGZcb{}}

        \PYG{c+c1}{/// \PYGZlt{}summary\PYGZgt{}}
        \PYG{c+c1}{/// Gets the current completion status}
        \PYG{c+c1}{/// \PYGZlt{}/summary\PYGZgt{}}
        \PYG{k}{public} \PYG{k+kt}{bool} \PYG{n}{IsCompleted} \PYG{p}{=\PYGZgt{}} \PYG{n}{addingComplete} \PYG{p}{\PYGZam{}\PYGZam{}} \PYG{n}{Count} \PYG{p}{==} \PYG{l+m}{0}\PYG{p}{;}
    \PYG{p}{\PYGZcb{}}
\PYG{p}{\PYGZcb{}}
\end{Verbatim}
